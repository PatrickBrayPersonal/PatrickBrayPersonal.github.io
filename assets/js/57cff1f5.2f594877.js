"use strict";(self.webpackChunkPatrickBrayPersonal_github_io=self.webpackChunkPatrickBrayPersonal_github_io||[]).push([[8387],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>d});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),s=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=s(r),m=n,d=p["".concat(l,".").concat(m)]||p[m]||f[m]||i;return r?a.createElement(d,o(o({ref:t},u),{},{components:r})):a.createElement(d,o({ref:t},u))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[p]="string"==typeof e?e:n,o[1]=c;for(var s=2;s<i;s++)o[s]=r[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1151:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>f,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var a=r(7462),n=(r(7294),r(3905));const i={},o="Python Packages",c={unversionedId:"Data Science/Python Packages",id:"Data Science/Python Packages",title:"Python Packages",description:"Sematic",source:"@site/docs/Data Science/Python Packages.md",sourceDirName:"Data Science",slug:"/Data Science/Python Packages",permalink:"/docs/Data Science/Python Packages",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Data Science/Python Packages.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Washington DC",permalink:"/docs/Cities/Washington DC"},next:{title:"Startups",permalink:"/docs/Data Science/Startups"}},l={},s=[{value:"Sematic",id:"sematic",level:3},{value:"MLFlow",id:"mlflow",level:3},{value:"Darts",id:"darts",level:3},{value:"NetworkX",id:"networkx",level:3},{value:"cProfile",id:"cprofile",level:3},{value:"Fire",id:"fire",level:3}],u={toc:s},p="wrapper";function f(e){let{components:t,...r}=e;return(0,n.kt)(p,(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"python-packages"},"Python Packages"),(0,n.kt)("h3",{id:"sematic"},"Sematic"),(0,n.kt)("p",null,"Excellent package with great artifacting of the data at each step.\nThe type checking is frustrating at the moment. You can't pass lists, which is absurd.\nAlso the error messages are rather unhelpful."),(0,n.kt)("h3",{id:"mlflow"},"MLFlow"),(0,n.kt)("p",null,"The logging interface is incredible and autolog changes the game even further.\nMajor accelerator on any ML Project without experiment tracking."),(0,n.kt)("h3",{id:"darts"},"Darts"),(0,n.kt)("p",null,"Darts ",(0,n.kt)("em",{parentName:"p"},"timeseries")," is the dataframe of ts analysis. Built in functionality here is a major timesaver."),(0,n.kt)("h3",{id:"networkx"},"NetworkX"),(0,n.kt)("p",null,"A must for graph analysis. Not necessarily performant so watch out for that. Built in graph algorithms as well."),(0,n.kt)("h3",{id:"cprofile"},"cProfile"),(0,n.kt)("p",null,"Profiling your code in an output log file. Can be hard to read."),(0,n.kt)("h3",{id:"fire"},"Fire"),(0,n.kt)("p",null,"CLI for the lazy. Just uses function arguments."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'import fire\nmain(arg1, arg2):\n    print("blah")\n\nif __name__ == __main__:\n    fire.Fire(main)\n')),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"python main.py --arg1 a --arg2 b\n")))}f.isMDXComponent=!0}}]);